// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZooAPI.Data;

#nullable disable

namespace ZooAPI.Migrations
{
    [DbContext(typeof(ZooAPIContext))]
    [Migration("20250207125000_dyr")]
    partial class dyr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZooAPI.models.Animal", b =>
                {
                    b.Property<Guid>("AnimalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EnclosureID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnimalID");

                    b.HasIndex("EnclosureID");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("ZooAPI.models.Enclosure", b =>
                {
                    b.Property<Guid>("EnclosureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EnclosureID");

                    b.ToTable("enclosures");
                });

            modelBuilder.Entity("ZooAPI.models.HealthJournal", b =>
                {
                    b.Property<Guid>("HealthJournalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HealthJournalID");

                    b.ToTable("HealthJournals");
                });

            modelBuilder.Entity("ZooAPI.models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("changedDefault")
                        .HasColumnType("bit");

                    b.Property<string>("mainArea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZooAPI.models.ZooKeeper", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EnclosureID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserID", "EnclosureID");

                    b.HasIndex("EnclosureID");

                    b.ToTable("ZooKeepers");
                });

            modelBuilder.Entity("ZooAPI.models.Animal", b =>
                {
                    b.HasOne("ZooAPI.models.Enclosure", "Enclosure")
                        .WithMany()
                        .HasForeignKey("EnclosureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enclosure");
                });

            modelBuilder.Entity("ZooAPI.models.ZooKeeper", b =>
                {
                    b.HasOne("ZooAPI.models.Enclosure", "Enclosure")
                        .WithMany("ZooKeepers")
                        .HasForeignKey("EnclosureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZooAPI.models.User", "User")
                        .WithMany("Enclosures")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enclosure");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZooAPI.models.Enclosure", b =>
                {
                    b.Navigation("ZooKeepers");
                });

            modelBuilder.Entity("ZooAPI.models.User", b =>
                {
                    b.Navigation("Enclosures");
                });
#pragma warning restore 612, 618
        }
    }
}
